{"version":3,"sources":["webpack:///./src/forms/industryProForm.js","webpack:///./src/forms/industryProContainer.js","webpack:///./src/forms/internForm.js","webpack:///./src/forms/internContainer.js","webpack:///./src/pages/forms/getInvolvedFormPage.js","webpack:///./src/hooks/useShowcase.js"],"names":["IndustryProForm","render","_this$props","this","props","handleSubmit","errors","touched","isSubmitting","isValid","setFieldValue","skillOptions","showcaseOptions","react_default","a","createElement","styledForm","onSubmit","formik_esm","className","Name","type","name","required","Email","component","Select","isMulti","closeMenuOnSelect","options","onChange","value","map","v","disabled","PureComponent","propTypes","PropTypes","func","isRequired","object","bool","arrayOf","IndustryProFormContainer","_ref","setFormState","setSubmitResponse","label","useShowcase","initialValues","formName","Github","Skill_Category","Interested_In_Projects","validationSchema","_ref2","asyncToGenerator_default","regenerator_default","mark","_callee","values","actions","response","wrap","_context","prev","next","fetch","method","headers","Content-type","body","JSON","stringify","sent","json","statusCode","resetForm","message","setSubmitting","stop","_x","_x2","apply","arguments","_ref3","industryProForm_IndustryProForm","InternForm","availabilityOptions","Component","InternContainer","Skill","Availability","Major","Website","Looking_For_Capstone","internForm_InternForm","GetInvolvedFormPage","state","internOrPro","handleInternOrPro","form","e","console","log","_this","setState","renderInternForm","formSubmitAnimation","internContainer","renderProForm","industryProContainer","_this2","layout","seo","title","style","textAlign","GearButtons","__webpack_exports__","params","showcaseProjects","_public_static_d_2100175076_json__WEBPACK_IMPORTED_MODULE_0__","data","allAirtable","edges","filter","node","Approved"],"mappings":"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","file":"component---src-pages-forms-get-involved-form-page-js-04e925a368a98e8ae87d.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Field } from 'formik';\r\nimport PropTypes, { object } from 'prop-types';\r\nimport Select from 'react-select';\r\nimport StyledForm from './styledForm';\r\n\r\nexport default class IndustryProForm extends PureComponent {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    touched: PropTypes.object.isRequired,\r\n    isSubmitting: PropTypes.bool,\r\n    isValid: PropTypes.bool,\r\n    setFieldValue: PropTypes.func.isRequired,\r\n    skillOptions: PropTypes.arrayOf(object).isRequired,\r\n    showcaseOptions: PropTypes.arrayOf(object).isRequired,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleSubmit,\r\n      errors,\r\n      touched,\r\n      isSubmitting,\r\n      isValid,\r\n      setFieldValue,\r\n      skillOptions,\r\n      showcaseOptions,\r\n    } = this.props;\r\n    return (\r\n      <StyledForm onSubmit={handleSubmit}>\r\n        <div>\r\n          <h3>Industry Professional Form</h3>\r\n          <p>Please provide the following information:</p>\r\n        </div>\r\n        <label>\r\n          Name:*\r\n          <Field\r\n            className={touched.Name && errors.Name ? 'invalid' : ''}\r\n            type=\"text\"\r\n            name=\"Name\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Email:*\r\n          <Field\r\n            className={touched.Email && errors.Email ? 'invalid' : ''}\r\n            type=\"email\"\r\n            name=\"Email\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Github Handle:\r\n          <Field type=\"text\" name=\"Github\" />\r\n        </label>\r\n        <label>\r\n          Skills:\r\n          <Field\r\n            className=\"select\"\r\n            component={Select}\r\n            name=\"Skill_Category\"\r\n            isMulti=\"true\"\r\n            closeMenuOnSelect=\"false\"\r\n            options={skillOptions}\r\n            onChange={value =>\r\n              setFieldValue('Skill_Category', value.map(v => v.value))\r\n            }\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Interested in Projects:\r\n          <Field\r\n            className=\"select\"\r\n            component={Select}\r\n            name=\"Interested_In_Projects\"\r\n            isMulti\r\n            closeMenuOnSelect=\"false\"\r\n            options={showcaseOptions}\r\n            onChange={value =>\r\n              setFieldValue('Interested_In_Projects', value.map(v => v.value))\r\n            }\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={isSubmitting || !isValid}>\r\n          Submit\r\n        </button>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport useShowcase from '../hooks/useShowcase';\r\nimport IndustryProForm from './industryProForm';\r\n\r\nconst IndustryProFormContainer = ({ setFormState, setSubmitResponse }) => {\r\n  const skillOptions = [\r\n    { value: 'FrontEnd', label: 'Developer: Front End' },\r\n    { value: 'BackEnd', label: 'Developer: Back End' },\r\n    { value: 'Web', label: 'Developer: Web' },\r\n    { value: 'Apps', label: 'Developer: Apps' },\r\n    { value: 'Design', label: 'Design' },\r\n    { value: 'Agile PM', label: 'Agile PM' },\r\n  ];\r\n\r\n  const initialValues = {\r\n    formName: 'Industry_Professional_Form', // Must be same as airtable base name\r\n    Name: '',\r\n    Email: '',\r\n    Github: '',\r\n    Skill_Category: [],\r\n    Interested_In_Projects: [],\r\n  };\r\n\r\n  const showcaseOptions = useShowcase();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema // currently validated with HTML\r\n      onSubmit={async (values, actions) => {\r\n        const response = await (await fetch(\r\n          '/api/airtable', // path to api proxy\r\n          {\r\n            method: 'PATCH',\r\n            headers: {\r\n              'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(values),\r\n          },\r\n        )).json();\r\n        if (response.statusCode === 200) {\r\n          actions.resetForm();\r\n        }\r\n        setFormState(true);\r\n        setSubmitResponse(response.message);\r\n        actions.setSubmitting(false);\r\n      }}\r\n      render={({\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleSubmit,\r\n        isValid,\r\n        setFieldValue,\r\n      }) => (\r\n        <IndustryProForm\r\n          // handleSkillCategoryChange={handleSkillCategoryChange}\r\n          skillOptions={skillOptions}\r\n          showcaseOptions={showcaseOptions}\r\n          // formik-bag\r\n          touched={touched}\r\n          errors={errors}\r\n          isSubmitting={isSubmitting}\r\n          handleSubmit={handleSubmit}\r\n          isValid={isValid}\r\n          setFieldValue={setFieldValue}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nIndustryProFormContainer.propTypes = {\r\n  setFormState: PropTypes.func.isRequired,\r\n  setSubmitResponse: PropTypes.func.isRequired,\r\n};\r\nexport default IndustryProFormContainer;\r\n","import React, { Component } from 'react';\r\nimport { Field } from 'formik';\r\nimport PropTypes, { object } from 'prop-types';\r\nimport Select from 'react-select';\r\n// import * as yup from 'yup'\r\nimport StyledForm from './styledForm';\r\n\r\nexport default class InternForm extends Component {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    touched: PropTypes.object.isRequired,\r\n    isSubmitting: PropTypes.bool,\r\n    isValid: PropTypes.bool,\r\n    setFieldValue: PropTypes.func.isRequired,\r\n    availabilityOptions: PropTypes.arrayOf(object).isRequired,\r\n    skillOptions: PropTypes.arrayOf(object).isRequired,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleSubmit,\r\n      errors,\r\n      touched,\r\n      isSubmitting,\r\n      isValid,\r\n      setFieldValue,\r\n      availabilityOptions,\r\n      skillOptions,\r\n    } = this.props;\r\n    return (\r\n      <StyledForm onSubmit={handleSubmit}>\r\n        <div>\r\n          <h3>Intern Form</h3>\r\n          <p>Please provide the following information:</p>\r\n        </div>\r\n        <label>\r\n          Name:*\r\n          <Field\r\n            className={touched.Name && errors.Name ? 'invalid' : ''}\r\n            type=\"text\"\r\n            name=\"Name\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Email:*\r\n          <Field\r\n            className={touched.Email && errors.Email ? 'invalid' : ''}\r\n            type=\"email\"\r\n            name=\"Email\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Github Handle:\r\n          <Field type=\"text\" name=\"Github\" />\r\n        </label>\r\n        <label>\r\n          Skills:\r\n          <Field\r\n            className=\"select\"\r\n            component={Select}\r\n            name=\"Skill\"\r\n            isMulti=\"true\"\r\n            closeMenuOnSelect=\"false\"\r\n            options={skillOptions}\r\n            onChange={value => setFieldValue('Skill', value.map(v => v.value))}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Availability\r\n          <Field\r\n            className=\"select\"\r\n            component={Select}\r\n            name=\"Availability\"\r\n            isMulti\r\n            closeMenuOnSelect=\"false\"\r\n            options={availabilityOptions}\r\n            onChange={value =>\r\n              setFieldValue('Availability', value.map(v => v.value))\r\n            }\r\n          />\r\n        </label>\r\n        <label>\r\n          Major:\r\n          <Field type=\"text\" name=\"Major\" />\r\n        </label>\r\n        <label>\r\n          Website:\r\n          <Field type=\"text\" name=\"Website\" />\r\n        </label>\r\n        <label className=\"checkbox-label\">\r\n          Looking for a Capstone:\r\n          <Field\r\n            className=\"checkbox\"\r\n            type=\"checkbox\"\r\n            name=\"Looking_For_Capstone\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={isSubmitting || !isValid}>\r\n          Submit\r\n        </button>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport InternForm from './internForm';\r\n\r\nconst InternContainer = ({ setFormState, setSubmitResponse }) => {\r\n  const initialValues = {\r\n    formName: 'Intern_Form', // Must be same as airtable base name\r\n    Name: '',\r\n    Email: '',\r\n    Github: '',\r\n    Skill: [],\r\n    Availability: [],\r\n    Major: '',\r\n    Website: '',\r\n    Looking_For_Capstone: false,\r\n  };\r\n\r\n  const skillOptions = [\r\n    { value: 'FrontEnd', label: 'Developer: Front End' },\r\n    { value: 'BackEnd', label: 'Developer: Back End' },\r\n    { value: 'Web', label: 'Developer: Web' },\r\n    { value: 'Apps', label: 'Developer: Apps' },\r\n    { value: 'Design', label: 'Design' },\r\n    { value: 'Agile PM', label: 'Agile PM' },\r\n  ];\r\n  const availabilityOptions = [\r\n    { value: 'Fall', label: 'Fall' },\r\n    { value: 'Winter', label: 'Winter' },\r\n    { value: 'Spring', label: 'Spring' },\r\n    { value: 'Summer', label: 'Summer' },\r\n  ];\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema // currently validated with HTML\r\n      onSubmit={async (values, actions) => {\r\n        const response = await (await fetch(\r\n          '/api/airtable', // path to api proxy\r\n          {\r\n            method: 'PATCH',\r\n            headers: {\r\n              'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(values),\r\n          },\r\n        )).json();\r\n        if (response.statusCode === 200) {\r\n          actions.resetForm();\r\n        }\r\n        setFormState(true);\r\n        setSubmitResponse(response.message);\r\n        actions.setSubmitting(false);\r\n      }}\r\n      render={({\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleSubmit,\r\n        isValid,\r\n        setFieldValue,\r\n      }) => (\r\n        <InternForm\r\n          skillOptions={skillOptions}\r\n          availabilityOptions={availabilityOptions}\r\n          // formik-bag\r\n          touched={touched}\r\n          errors={errors}\r\n          isSubmitting={isSubmitting}\r\n          handleSubmit={handleSubmit}\r\n          isValid={isValid}\r\n          setFieldValue={setFieldValue}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nInternContainer.propTypes = {\r\n  setFormState: PropTypes.func.isRequired,\r\n  setSubmitResponse: PropTypes.func.isRequired,\r\n};\r\nexport default InternContainer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { InternProGears } from '../../components/GearButtons';\r\n\r\nimport Layout from '../../components/layout';\r\nimport SEO from '../../components/seo';\r\nimport FormSubmitAnimation from '../../forms/formSubmitAnimation';\r\nimport IndustryProContainer from '../../forms/industryProContainer';\r\nimport InternContainer from '../../forms/internContainer';\r\n\r\nclass GetInvolvedFormPage extends Component {\r\n  state = {\r\n    internOrPro: '',\r\n  };\r\n\r\n  handleInternOrPro = (form, e) => {\r\n    console.log(form);\r\n    console.log(e);\r\n    this.setState({ internOrPro: form });\r\n  };\r\n\r\n  renderInternForm = () => (\r\n    <FormSubmitAnimation>\r\n      {({ setFormState, setSubmitResponse }) => (\r\n        <InternContainer\r\n          setFormState={setFormState}\r\n          setSubmitResponse={setSubmitResponse}\r\n        />\r\n      )}\r\n    </FormSubmitAnimation>\r\n  );\r\n\r\n  renderProForm = () => (\r\n    <FormSubmitAnimation>\r\n      {({ setFormState, setSubmitResponse }) => (\r\n        <IndustryProContainer\r\n          setFormState={setFormState}\r\n          setSubmitResponse={setSubmitResponse}\r\n        />\r\n      )}\r\n    </FormSubmitAnimation>\r\n  );\r\n\r\n  render() {\r\n    const { internOrPro } = this.state;\r\n    return (\r\n      <Layout>\r\n        <SEO title=\"Get Involved\" />\r\n        <h1 style={{ textAlign: 'center' }}>Get Involved!</h1>\r\n        <InternProGears handleInternOrPro={e => this.handleInternOrPro(e)} />\r\n        {internOrPro === 'intern' && this.renderInternForm()}\r\n        {internOrPro === 'pro' && this.renderProForm()}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetInvolvedFormPage;\r\n","import { useStaticQuery, graphql } from 'gatsby';\r\n\r\nexport default params => {\r\n  const showcaseProjects = useStaticQuery(graphql`\r\n    {\r\n      allAirtable(filter: { table: { eq: \"Showcase\" } }) {\r\n        edges {\r\n          node {\r\n            data {\r\n              Name\r\n              Approved\r\n              Description\r\n              URL\r\n              TeamMembers\r\n              ScreenShot {\r\n                localFiles {\r\n                  childImageSharp {\r\n                    fixed(width: 200, quality: 100) {\r\n                      ...GatsbyImageSharpFixed\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `).allAirtable.edges.filter(({ node }) => node.data.Approved);\r\n  if (params === 'all') {\r\n    return showcaseProjects;\r\n  }\r\n  return showcaseProjects.map(({ node }) => ({\r\n    value: node.data.Name,\r\n    label: node.data.Name,\r\n  }));\r\n};\r\n"],"sourceRoot":""}