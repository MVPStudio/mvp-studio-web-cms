{"version":3,"sources":["webpack:///./src/forms/sponsorFormContainer.js","webpack:///./src/pages/forms/sponsorFormPage.js","webpack:///./src/hooks/useShowcase.js","webpack:///./src/forms/sponsorForm.js"],"names":["SponsorFormContainer","_ref","setFormState","setSubmitResponse","sponsorOptions","value","label","typeOfOrganization","showcaseOptions","useShowcase","react_default","a","createElement","formik_esm","initialValues","formName","Name","Email","Type_Of_Organization","Project_Types_Interest","Interested_In_Projects","Type_Of_Sponsorship","validationSchema","onSubmit","_ref2","asyncToGenerator_default","regenerator_default","mark","_callee","values","actions","response","wrap","_context","prev","next","fetch","method","headers","Content-type","body","JSON","stringify","sent","json","statusCode","resetForm","message","setSubmitting","stop","this","_x","_x2","apply","arguments","render","_ref3","touched","errors","isSubmitting","handleSubmit","isValid","setFieldValue","sponsorForm","propTypes","PropTypes","func","isRequired","SponsorFormPage","layout","seo","title","style","textAlign","formSubmitAnimation","sponsorFormContainer","__webpack_exports__","params","showcaseProjects","_public_static_d_2100175076_json__WEBPACK_IMPORTED_MODULE_0__","data","allAirtable","edges","filter","node","Approved","map","SponsorForm","_this$props","props","react__WEBPACK_IMPORTED_MODULE_1___default","_styledForm__WEBPACK_IMPORTED_MODULE_5__","formik__WEBPACK_IMPORTED_MODULE_2__","className","type","name","required","component","Select","options","onChange","isMulti","closeMenuOnSelect","v","disabled","Component","object","bool","arrayOf"],"mappings":"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","file":"component---src-pages-forms-sponsor-form-page-js-edc6d85b72dda01aca40.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport useShowcase from '../hooks/useShowcase';\r\nimport SponsorForm from './sponsorForm';\r\n\r\nconst SponsorFormContainer = ({ setFormState, setSubmitResponse }) => {\r\n  const sponsorOptions = [\r\n    { value: 'Cash', label: 'Cash Funding' },\r\n    { value: 'Development', label: 'Development Labor' },\r\n    { value: 'Design', label: 'Design Labor' },\r\n    { value: 'Advertising', label: 'Advertising' },\r\n    { value: 'Agile PM', label: 'Agile PM Labor' },\r\n  ];\r\n\r\n  const typeOfOrganization = [\r\n    { value: 'Private', label: 'Private' },\r\n    { value: 'Public', label: 'Public' },\r\n    { value: '501c3', label: '501c3' },\r\n  ];\r\n\r\n  const initialValues = {\r\n    formName: 'Sponsor_Form', // Must be same as airtable base name\r\n    Name: '',\r\n    Email: '',\r\n    Type_Of_Organization: [],\r\n    Project_Types_Interest: '',\r\n    Interested_In_Projects: [],\r\n    Type_Of_Sponsorship: [],\r\n  };\r\n\r\n  const showcaseOptions = useShowcase();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema // currently validated with HTML\r\n      onSubmit={async (values, actions) => {\r\n        const response = await (await fetch(\r\n          '/api/airtable', // path to api proxy\r\n          {\r\n            method: 'PATCH',\r\n            headers: {\r\n              'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(values),\r\n          },\r\n        )).json();\r\n        if (response.statusCode === 200) {\r\n          actions.resetForm();\r\n        }\r\n        setFormState(true);\r\n        setSubmitResponse(response.message);\r\n        actions.setSubmitting(false);\r\n      }}\r\n      render={({\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleSubmit,\r\n        isValid,\r\n        setFieldValue,\r\n      }) => (\r\n        <SponsorForm\r\n          sponsorOptions={sponsorOptions}\r\n          showcaseOptions={showcaseOptions}\r\n          typeOfOrganization={typeOfOrganization}\r\n          // formik-bag\r\n          touched={touched}\r\n          errors={errors}\r\n          isSubmitting={isSubmitting}\r\n          handleSubmit={handleSubmit}\r\n          isValid={isValid}\r\n          setFieldValue={setFieldValue}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nSponsorFormContainer.propTypes = {\r\n  setFormState: PropTypes.func.isRequired,\r\n  setSubmitResponse: PropTypes.func.isRequired,\r\n};\r\nexport default SponsorFormContainer;\r\n","import React from 'react';\r\n\r\nimport Layout from '../../components/layout';\r\nimport SEO from '../../components/seo';\r\nimport FormSubmitAnimation from '../../forms/formSubmitAnimation';\r\nimport SponsorFormContainer from '../../forms/sponsorFormContainer';\r\n\r\nconst SponsorFormPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Become a Sponsor\" />\r\n    <h1 style={{ textAlign: 'center' }}>Become a Sponsor</h1>\r\n\r\n    {/* Make choice for intern or pro */}\r\n    <FormSubmitAnimation>\r\n      {({ setFormState, setSubmitResponse }) => (\r\n        <SponsorFormContainer\r\n          setFormState={setFormState}\r\n          setSubmitResponse={setSubmitResponse}\r\n        />\r\n      )}\r\n    </FormSubmitAnimation>\r\n  </Layout>\r\n);\r\n\r\nexport default SponsorFormPage;\r\n","import { useStaticQuery, graphql } from 'gatsby';\r\n\r\nexport default params => {\r\n  const showcaseProjects = useStaticQuery(graphql`\r\n    {\r\n      allAirtable(filter: { table: { eq: \"Showcase\" } }) {\r\n        edges {\r\n          node {\r\n            data {\r\n              Name\r\n              Approved\r\n              Description\r\n              URL\r\n              TeamMembers\r\n              ScreenShot {\r\n                localFiles {\r\n                  childImageSharp {\r\n                    fixed(width: 200, quality: 100) {\r\n                      ...GatsbyImageSharpFixed\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `).allAirtable.edges.filter(({ node }) => node.data.Approved);\r\n  if (params === 'all') {\r\n    return showcaseProjects;\r\n  }\r\n  return showcaseProjects.map(({ node }) => ({\r\n    value: node.data.Name,\r\n    label: node.data.Name,\r\n  }));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Field } from 'formik';\r\nimport PropTypes, { object } from 'prop-types';\r\nimport Select from 'react-select';\r\nimport StyledForm from './styledForm';\r\n\r\nexport default class SponsorForm extends Component {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    touched: PropTypes.object.isRequired,\r\n    isSubmitting: PropTypes.bool,\r\n    isValid: PropTypes.bool,\r\n    setFieldValue: PropTypes.func.isRequired,\r\n    sponsorOptions: PropTypes.arrayOf(object).isRequired,\r\n    showcaseOptions: PropTypes.arrayOf(object).isRequired,\r\n    typeOfOrganization: PropTypes.arrayOf(object).isRequired,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleSubmit,\r\n      errors,\r\n      touched,\r\n      isSubmitting,\r\n      isValid,\r\n      setFieldValue,\r\n      sponsorOptions,\r\n      showcaseOptions,\r\n      typeOfOrganization,\r\n    } = this.props;\r\n    return (\r\n      <StyledForm onSubmit={handleSubmit}>\r\n        <div>\r\n          <h3>Sponsor Form</h3>\r\n          <p>Please provide the following information:</p>\r\n        </div>\r\n        <label>\r\n          Name:*\r\n          <Field\r\n            className={touched.Name && errors.Name ? 'invalid' : ''}\r\n            type=\"text\"\r\n            name=\"Name\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Email:*\r\n          <Field\r\n            className={touched.Email && errors.Email ? 'invalid' : ''}\r\n            type=\"email\"\r\n            name=\"Email\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Type of Organization:\r\n          <Field\r\n            className=\"select\"\r\n            component={Select}\r\n            name=\"Type_Of_Organization\"\r\n            options={typeOfOrganization}\r\n            onChange={value =>\r\n              setFieldValue('Type_Of_Organization', value.value)\r\n            }\r\n          />\r\n        </label>\r\n        <label>\r\n          Types of Projects Interested in:\r\n          <Field component=\"textarea\" name=\"Project_Types_Interest\" />\r\n        </label>\r\n        <label>\r\n          Interested in Projects:\r\n          <Field\r\n            className=\"select\"\r\n            component={Select}\r\n            name=\"Interested_In_Projects\"\r\n            isMulti\r\n            closeMenuOnSelect=\"false\"\r\n            options={showcaseOptions}\r\n            onChange={value =>\r\n              setFieldValue('Interested_In_Projects', value.map(v => v.value))\r\n            }\r\n          />\r\n        </label>\r\n        <label>\r\n          Type of Sponsorship:\r\n          <Field\r\n            className=\"select\"\r\n            component={Select}\r\n            name=\"Type_Of_Sponsorship\"\r\n            isMulti\r\n            closeMenuOnSelect=\"false\"\r\n            options={sponsorOptions}\r\n            onChange={value =>\r\n              setFieldValue('Type_Of_Sponsorship', value.map(v => v.value))\r\n            }\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={isSubmitting || !isValid}>\r\n          Submit\r\n        </button>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}